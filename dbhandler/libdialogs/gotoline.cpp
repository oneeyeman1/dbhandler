// -*- C++ -*-
//
// generated by wxGlade 0.7.2 (standalone edition) on Tue Dec 31 21:39:49 2019
//
// Example for compiling a single file project under Linux using g++:
//  g++ MyApp.cpp $(wx-config --libs) $(wx-config --cxxflags) -o MyApp
//
// Example for compiling a multi file project under Linux using g++:
//  g++ main.cpp $(wx-config --libs) $(wx-config --cxxflags) -o MyApp Dialog1.cpp Frame1.cpp
//
// For compilers that support precompilation, includes "wx/wx.h".
#include "wx/wxprec.h"

#ifdef __BORLANDC__
#pragma hdrstop
#endif

#ifndef WX_PRECOMP
#include "wx/wx.h"
#endif

#include "wx/valnum.h"
#include "gotoline.h"

// begin wxGlade: ::extracode
// end wxGlade



GoToDialog::GoToDialog(wxWindow* parent) : wxDialog(parent, wxID_ANY, "")
{
    // begin wxGlade: GoToDialog::GoToDialog
    wxTextValidator val( wxFILTER_DIGITS );
    m_panel = new wxPanel( this, wxID_ANY );
    m_label1 = new wxStaticText( m_panel, wxID_ANY, _( "Line Number" ) );
    m_lineNo = new wxTextCtrl( m_panel, wxID_ANY, "", wxDefaultPosition, wxDefaultSize, 0, val );

    set_properties();
    do_layout();
    // end wxGlade
    m_ok = (wxButton *) FindWindowById( wxID_OK );
    m_ok->Bind( wxEVT_UPDATE_UI, &GoToDialog::OnOKUpdateUI, this );
    m_ok->Enable( false );
    m_ok->SetDefault();
}


void GoToDialog::set_properties()
{
    // begin wxGlade: GoToDialog::set_properties
    SetTitle( _( "Goto Line" ) );
    // end wxGlade
}


void GoToDialog::do_layout()
{
    // begin wxGlade: GoToDialog::do_layout
    auto sizer_1 = new wxBoxSizer( wxHORIZONTAL );
    auto sizer_2 = new wxBoxSizer( wxHORIZONTAL );
    auto sizer_3 = new wxBoxSizer( wxVERTICAL );
    auto sizer_4 = new wxBoxSizer( wxVERTICAL );
    auto sizer_5 = new wxBoxSizer( wxHORIZONTAL );
    auto sizer_6 = new wxStdDialogButtonSizer();
    sizer_6->AddButton( new wxButton( m_panel, wxID_OK, _( "OK" ) ) );
    sizer_6->AddButton( new wxButton( m_panel, wxID_CANCEL, _( "Cancel" ) ) );
    sizer_6->Realize();
    sizer_2->Add( 5, 5, 0, wxEXPAND, 0 );
    sizer_3->Add( 5, 5, 0, wxEXPAND, 0 );
    sizer_5->Add( m_label1, 0, wxALIGN_CENTER, 0 );
    sizer_5->Add( 5, 5, 0, wxEXPAND, 0 );
    sizer_5->Add( m_lineNo, 0, wxALIGN_CENTER, 0 );
    sizer_4->Add( sizer_5, 0, wxEXPAND, 0 );
    sizer_4->Add( 5, 5, 0, wxEXPAND, 0 );
/*    sizer_6->Add( m_ok, 0, wxEXPAND, 0 );
    sizer_6->Add( 5, 5, 0, wxEXPAND, 0 );
    sizer_6->Add( m_cancel, 0, wxEXPAND, 0 );*/
    sizer_4->Add( sizer_6, 0, wxEXPAND, 0 );
    sizer_3->Add( sizer_4, 0, wxEXPAND, 0 );
    sizer_3->Add( 5, 5, 0, wxEXPAND, 0 );
    sizer_2->Add( sizer_3, 0, wxEXPAND, 0 );
    sizer_2->Add( 5, 5, 0, wxEXPAND, 0 );
    m_panel->SetSizer( sizer_2 );
    sizer_1->Add( m_panel, 0, wxEXPAND, 0 );
    SetSizer( sizer_1 );
    sizer_1->Fit( this );
    Layout();
    Centre();
    // end wxGlade
}

void GoToDialog::OnOKUpdateUI(wxUpdateUIEvent &event)
{
    if( m_lineNo->GetValue().length() > 0 )
        event.Enable( true );
    else
        event.Enable( false );
}

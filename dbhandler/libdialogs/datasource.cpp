// -*- C++ -*-
//
// generated by wxGlade 0.7.2 (standalone edition) on Wed Jun 22 22:43:12 2022
//
// Example for compiling a single file project under Linux using g++:
//  g++ MyApp.cpp $(wx-config --libs) $(wx-config --cxxflags) -o MyApp
//
// Example for compiling a multi file project under Linux using g++:
//  g++ main.cpp $(wx-config --libs) $(wx-config --cxxflags) -o MyApp Dialog1.cpp Frame1.cpp
//
// For compilers that support precompilation, includes "wx/wx.h".
#include "wx/wxprec.h"

#ifdef __BORLANDC__
#pragma hdrstop
#endif

#ifndef WX_PRECOMP
#include "wx/wx.h"
#endif

#include <vector>
#include"wx/config.h"
#include "dialogs.h"
#include "datasource.h"

// begin wxGlade: ::extracode
// end wxGlade



DataSorces::DataSorces(wxWindow* parent, wxWindowID id, const wxString& title, const std::vector<Profile> &profiles):
    wxDialog(parent, id, title)
{
    m_profiles = profiles;
    // begin wxGlade: DataSorces::DataSorces
    m_panel = new wxPanel( this, wxID_ANY );
    m_label = new wxStaticText( m_panel, wxID_ANY, _( "Select Data Source" ) );
    m_OK = new wxButton( m_panel, wxID_OK, wxEmptyString );
    m_dataSources = new wxComboBox( m_panel, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, 0, nullptr, wxCB_DROPDOWN );
    m_cancel = new wxButton( m_panel, wxID_CANCEL, wxEmptyString );

    set_properties();
    do_layout();
    // end wxGlade
    m_OK->Bind( wxEVT_BUTTON, &DataSorces::OnOK, this );
}


void DataSorces::set_properties()
{
    for( std::vector<Profile>::iterator it = m_profiles.begin(); it < m_profiles.end(); ++it )
    {
        m_dataSources->Append( (*it).m_name );
        if( (*it).m_isCurrent )
            m_dataSources->SetStringSelection( (*it).m_name );
    }
    // begin wxGlade: DataSorces::set_properties
    SetTitle( _( "Data Sources" ) );
    m_OK->SetDefault();
    // end wxGlade
}


void DataSorces::do_layout()
{
    // begin wxGlade: DataSorces::do_layout
    wxBoxSizer* sizer_1 = new wxBoxSizer( wxHORIZONTAL );
    wxBoxSizer* sizer_2 = new wxBoxSizer( wxHORIZONTAL );
    wxBoxSizer* sizer_3 = new wxBoxSizer( wxVERTICAL );
    wxFlexGridSizer* grid_sizer_1 = new wxFlexGridSizer( 2, 2, 5, 5 );
    sizer_2->Add( 5, 5, 0, wxEXPAND, 0 );
    sizer_3->Add( 5, 5, 0, wxEXPAND, 0 );
    grid_sizer_1->Add( m_label, 0, wxALIGN_CENTER, 0 );
    grid_sizer_1->Add( m_OK, 0, wxEXPAND, 0 );
    grid_sizer_1->Add( m_dataSources, 0, 0, 0 );
    grid_sizer_1->Add( m_cancel, 0, 0, 0 );
    sizer_3->Add( grid_sizer_1, 0, 0, 0 );
    sizer_3->Add( 5, 5, 0, wxEXPAND, 0 );
    sizer_2->Add( sizer_3, 1, 0, 0 );
    sizer_2->Add( 5, 5, 0, wxEXPAND, 0 );
    m_panel->SetSizer( sizer_2 );
    sizer_1->Add( m_panel, 1, 0, 0 );
    SetSizer( sizer_1 );
    sizer_1->Fit( this );
    Layout();
    // end wxGlade
}

void DataSorces::OnOK(wxCommandEvent &WXUNUSED(event))
{
    m_dataSource = m_dataSources->GetValue();
    EndModal( wxID_OK );
}

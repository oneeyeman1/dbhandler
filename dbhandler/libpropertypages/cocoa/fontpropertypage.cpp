// -*- C++ -*- generated by wxGlade 0.5 on Wed Feb 06 22:39:49 2008
/***************************************************************************
 *   Copyright (C) 2005 by Igor Korot                                      *
 *   igor@IgorsGentoo                                                      *
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 *   This program is distributed in the hope that it will be useful,       *
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of        *
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
 *   GNU General Public License for more details.                          *
 *                                                                         *
 *   You should have received a copy of the GNU General Public License     *
 *   along with this program; if not, write to the                         *
 *   Free Software Foundation, Inc.,                                       *
 *   59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             *
 ***************************************************************************/
#ifdef __BORLANDC__
#pragma hdrstop
#endif

#ifndef WX_PRECOMP
#include "wx/wx.h"
#endif

#include "wx/fontpicker.h"
#include "wx/bmpcbox.h"
#include "propertypagebase.h"
#include "fontpropertypagebase.h"

CFontPropertyPage::CFontPropertyPage(wxWindow* parent, const FontPropertyPage &font, bool colorEnabled) : CFontPropertyPageBase( parent, font )
{
    m_font = font;
    m_dirty = false;
    m_holder = new wxFontPickerCtrl( this, wxID_ANY, font.font );
    auto *sizer = new wxBoxSizer( wxHORIZONTAL );
    sizer->Add( m_holder, 0, wxEXPAND, 0 );
    SetSizerAndFit( sizer );
    m_holder->Bind( wxEVT_FONTPICKER_CHANGED, &CFontPropertyPage::OnFontChange, this );
}

FontPropertyPage &CFontPropertyPage::GetFont()
{
    return m_font;
}

void CFontPropertyPage::SetFont(const std::wstring &name, int size, bool italic, bool bold, bool underline, bool strikethrough)
{
    m_font.font.SetPointSize( size );
    m_font.font.SetStyle( italic ? wxFONTSTYLE_ITALIC : wxFONTSTYLE_NORMAL );
    m_font.font.SetWeight( bold ? wxFONTWEIGHT_BOLD : wxFONTWEIGHT_NORMAL );
    m_font.font.SetUnderlined( underline );
    m_font.font.SetFaceName( name );
    m_font.font.SetFamily( wxFONTFAMILY_DEFAULT );
    m_font.font.SetEncoding( wxFONTENCODING_DEFAULT );
    if( strikethrough )
        m_font.font.SetStrikethrough( true );
    m_holder->SetFont( m_font.font );
}

void CFontPropertyPage::OnFontChange(wxCommandEvent &event)
{
    m_dirty = true;
    m_font.font = m_holder->GetFont();
}

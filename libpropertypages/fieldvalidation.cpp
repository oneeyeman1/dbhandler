// -*- C++ -*-
//
// generated by wxGlade 1.1.0 on Sat Nov  9 22:00:04 2024
//
// Example for compiling a single file project under Linux using g++:
//  g++ MyApp.cpp $(wx-config --libs) $(wx-config --cxxflags) -o MyApp
//
// Example for compiling a multi file project under Linux using g++:
//  g++ main.cpp $(wx-config --libs) $(wx-config --cxxflags) -o MyApp Dialog1.cpp Frame1.cpp
//

#include <wx/wx.h>
#include "database.h"
#include "propertypagebase.h"
#include "fieldvalidation.h"

// begin wxGlade: ::extracode
// end wxGlade

FieldValidation::FieldValidation(wxWindow* parent, Database *db) : PropertyPageBase( parent )
{
    // begin wxGlade: FieldValidation::FieldValidation
    auto sizer_1 = new wxBoxSizer( wxHORIZONTAL );
    sizer_1->Add( 5, 5, 0, wxEXPAND, 0 );
    auto sizer_2 = new wxBoxSizer( wxVERTICAL );
    sizer_1->Add( sizer_2, 0, wxEXPAND, 0 );
    sizer_2->Add( 5, 5, 0, wxEXPAND, 0 );
    auto sizer_3 = new wxBoxSizer( wxVERTICAL );
    sizer_2->Add( sizer_3, 0, wxEXPAND, 0 );
    auto grid_sizer_1 = new wxFlexGridSizer( 2, 2, 5, 5 );
    sizer_3->Add( grid_sizer_1, 1, wxEXPAND, 0 );
    m_label1 = new wxStaticText( this, wxID_ANY, _( "Validation Rule" ) );
    grid_sizer_1->Add( m_label1, 0, wxALIGN_CENTER_VERTICAL, 0 );
    grid_sizer_1->Add( 5, 5, 0, 0, 0 );
    m_rules = new wxListBox( this, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, nullptr, wxLB_SINGLE );
    std::vector<std::tuple<std::wstring, std::wstring, unsigned int, int, std::wstring> >::const_iterator it = db->GetTableVector().m_validators.begin();
    for( it; it < db->GetTableVector().m_validators.end(); ++it )
    {
        m_rules->Append( std::get<(0)>( *it ) );
    }
    grid_sizer_1->Add( m_rules, 0, 0, 0 );
    auto sizer_4 = new wxBoxSizer( wxVERTICAL );
    grid_sizer_1->Add( sizer_4, 1, wxEXPAND, 0 );
    m_edit = new wxButton( this, wxID_ANY, _( "Edit" ) );
    sizer_4->Add( m_edit, 0, 0, 0 );
    sizer_4->Add( 5, 5, 0, wxEXPAND, 0 );
    m_new = new wxButton( this, wxID_ANY, _( "New..." ) );
    sizer_4->Add( m_new, 0, 0, 0 );
    sizer_3->Add( 5, 5, 0, wxEXPAND, 0 );
    m_label2 = new wxStaticText( this, wxID_ANY, _( "Initial Vale" ) );
    sizer_3->Add( m_label2, 0, 0, 0 );
    sizer_3->Add( 5, 5, 0, wxEXPAND, 0 );
    m_initValue = new wxComboBox( this, wxID_ANY, "", wxDefaultPosition, wxDefaultSize, 0, nullptr, wxCB_DROPDOWN );
    sizer_3->Add( m_initValue, 0, wxEXPAND, 0 );
    sizer_2->Add( 5, 5, 0, wxEXPAND, 0 );
    sizer_1->Add( 5, 5, 0, wxEXPAND, 0 );

    SetSizer( sizer_1 );
    sizer_1->Fit( this );
    // end wxGlade
    m_edit->Bind( wxEVT_UPDATE_UI, &FieldValidation::OnEditUpdateUI, this );
}

void FieldValidation::OnEditUpdateUI(wxUpdateUIEvent &event)
{
    if( m_rules->GetSelection() == wxNOT_FOUND )
        event.Enable( false );
    else
        event.Enable( true );
}

// -*- C++ -*-
//
// generated by wxGlade 0.9.2 on Wed Jul 22 22:08:25 2020
//
// Example for compiling a single file project under Linux using g++:
//  g++ MyApp.cpp $(wx-config --libs) $(wx-config --cxxflags) -o MyApp
//
// Example for compiling a multi file project under Linux using g++:
//  g++ main.cpp $(wx-config --libs) $(wx-config --cxxflags) -o MyApp Dialog1.cpp Frame1.cpp
//
#include <wx/wx.h>

#include <map>
#include "wx/checkbox.h"
#include "wx/filepicker.h"
#include "configuration.h"
#include "propertypagebase.h"
#include "librarypainteroptionsmgmt.h"

LibraryPainterOptionsMgmtPage::LibraryPainterOptionsMgmtPage(wxWindow *parent, LibraryPainterOptionsManagement mgmt) : PropertyPageBase( parent )
{
    auto sizer = new wxBoxSizer( wxHORIZONTAL );
    sizer->Add( 5, 5, 0, wxEXPAND, 0 );
    auto sizer1 = new wxBoxSizer( wxVERTICAL );
    sizer1->Add( 5, 5, 0, wxEXPAND, 0 );
    sizer1->Add( 5, 5, 0, wxEXPAND, 0 );
    auto sizer2 = new wxStaticBoxSizer( new wxStaticBox( this, wxID_ANY, _( "Source Management Log" ) ), wxVERTICAL );
    sizer2->Add( 5, 5, 0, wxEXPAND, 0 );
    m_logEverything = new wxCheckBox( this, wxID_ANY, _( "Log all source management activity" ) );
    m_logEverything->SetValue( mgmt.m_logEverything );
    sizer2->Add( m_logEverything, 0, wxEXPAND, 0 );
    sizer2->Add( 5, 5, 0, wxEXPAND, 0 );
    m_logFile = new wxFilePickerCtrl( this, wxID_ANY, mgmt.m_logFile, _( "File Name:" ) );
    m_logFile->Bind( wxEVT_UPDATE_UI, &LibraryPainterOptionsMgmtPage::OnLogFileUpdateUI, this );
    sizer2->Add( m_logFile, 0, wxEXPAND, 0 );
    sizer2->Add( 5, 5, 0, wxEXPAND, 0 );
    const wxArrayString choices =
    {
        _( "Append to log file" ),
        _( "Overwrite log file" )
    };
    m_options = new wxRadioBox( this, wxID_ANY, _( "Log Options" ), wxDefaultPosition, wxDefaultSize, choices, 2, wxRA_SPECIFY_ROWS );
    m_options->Bind( wxEVT_UPDATE_UI, &LibraryPainterOptionsMgmtPage::OnLogFileUpdateUI, this );
    m_options->SetSelection( mgmt.m_options );
    sizer2->Add( m_options, 0, wxALIGN_CENTER_HORIZONTAL, 0 );
    sizer2->Add( 5, 5, 0, wxEXPAND, 0 );
    sizer1->Add( sizer2, 0, wxEXPAND, 0 );
    sizer1->Add( 5, 5, 0, wxEXPAND, 0 );
    m_requireComments = new wxCheckBox( this, wxID_ANY, _( "Require comment on Checkin" ) );
    m_requireComments->SetValue( mgmt.m_requireComment );
    sizer1->Add( m_requireComments, 0, wxEXPAND, 0 );
    sizer1->Add( 5, 5, 0, wxEXPAND, 0 );
    sizer->Add( sizer1, 0, wxEXPAND, 0 );
    sizer->Add( 5, 5, 0, wxEXPAND, 0 );
    SetSizer( sizer );
    sizer->Fit( this );
}

void LibraryPainterOptionsMgmtPage::OnLogFileUpdateUI(wxUpdateUIEvent &event)
{
    if( m_logEverything->IsChecked() )
        event.Enable( true );
    else
        event.Enable( false );
}

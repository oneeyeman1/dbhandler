// -*- C++ -*- generated by wxGlade 0.5 on Wed Feb 06 22:39:49 2008
/***************************************************************************
 *   Copyright (C) 2005 by Igor Korot                                      *
 *   igor@IgorsGentoo                                                      *
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 *   This program is distributed in the hope that it will be useful,       *
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of        *
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
 *   GNU General Public License for more details.                          *
 *                                                                         *
 *   You should have received a copy of the GNU General Public License     *
 *   along with this program; if not, write to the                         *
 *   Free Software Foundation, Inc.,                                       *
 *   59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             *
 ***************************************************************************/
#ifdef __WXQT__
#ifdef __BORLANDC__
#pragma hdrstop
#endif

#ifndef WX_PRECOMP
#include "wx/wx.h"
#endif

#include <QFontDialog>
#include "wx/font.h"
#include "wx/fontutil.h"
#include "wx/button.h"
#include "wx/nativewin.h"
#include "wx/bmpcbox.h"
#include "colorcombobox.h"
#include "propertypagebase.h"
#include "fontpropertypagebase.h"

CFontPropertyPage::CFontPropertyPage(wxWindow* parent, FontPropertyPage font, bool colorEnabled)
 : CFontPropertyPageBase(parent, font)
{
    auto foreground = new CColorComboBox( this, wxID_ANY );
    auto background = new CColorComboBox( this, wxID_ANY );
    fontInfo = font;
/*    auto sizerMain = new wxBoxSizer( wxHORIZONTAL );
    sizerMain->Add( 5, 5, 0, wxEXPAND, 0 );
    auto sizerPage = new wxBoxSizer( wxVERTICAL );
    sizerPage->Add( 5, 5, 0, wxEXPAND, 0 );*/
    m_panel = new QFontDialog( font.font.GetHandle(), parent->GetHandle() );
    m_panel->setOptions( QFontDialog::NoButtons );
//    sizerPage->Add( m_panel, 0, wxEXPAND, 0 );
    if( colorEnabled )
    {
/*        sizerPage->Add( 5, 5, 0, wxEXPAND, 0 );
        auto colorSizer = new wxBoxSizer( wxHORIZONTAL );*/
        foreground->Enable() ;
/*        colorSizer->Add( foreground, 0, wxEXPAND, 0 );
        colorSizer->Add( 5, 5, 0, wxEXPAND, 0 );*/
        background->Enable();
/*        colorSizer->Add( background, 0, wxEXPAND, 0 );
        sizerPage->Add( colorSizer, 0, wxEXPAND, 0 );*/
    }
    else
    {
        foreground->Disable();
        background->Disable();
    }
/*    sizerMain->Add( sizerPage, 0, wxEXPAND, 0 );
    sizerMain->Add( 5, 5, 0, wxEXPAND, 0 );
    SetSizer( sizerMain );
    Layout();*/
}

CFontPropertyPage::~CFontPropertyPage()
{
}

FontPropertyPage &CFontPropertyPage::GetFont()
{
    wxFont propertiesFont( m_panel->selectedFont() );
    fontInfo.font = propertiesFont;
    return fontInfo;
}

#endif

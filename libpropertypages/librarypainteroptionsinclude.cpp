// -*- C++ -*-
//
// generated by wxGlade 0.9.2 on Wed Jul 22 22:08:25 2020
//
// Example for compiling a single file project under Linux using g++:
//  g++ MyApp.cpp $(wx-config --libs) $(wx-config --cxxflags) -o MyApp
//
// Example for compiling a multi file project under Linux using g++:
//  g++ main.cpp $(wx-config --libs) $(wx-config --cxxflags) -o MyApp Dialog1.cpp Frame1.cpp
//
#include <wx/wx.h>

#include <map>
#include "wx/checkbox.h"
#include "database.h"
#include "guiobjectsproperties.h"
#include "configuration.h"
#include "propertypagebase.h"
#include "librarypainteroptionsinclude.h"

LibraryPainterOptionsIncludePage::LibraryPainterOptionsIncludePage(wxWindow *parent, LibraryPanterOptionsInclude include) : PropertyPageBase( parent )
{
    const wxString labels[] =
    {
        _( "Application" ),
        _( "Data Pipeline" ),
        _( "DataWindow" ),
        _( "Function" ),
        _( "Menu" ),
        _( "Project" ),
        _( "Proxy" ),
        _( "Query" ),
        _( "Structure" ),
        _( "User Object" ),
        _( "Window" )
    };
    auto sizer = new wxBoxSizer( wxHORIZONTAL );
    sizer->Add( 5, 5, 0, wxEXPAND, 0 );
    auto sizer1 = new wxBoxSizer( wxVERTICAL );
    sizer1->Add( 5, 5, 0, wxEXPAND, 0 );
    auto sizer2 = new wxBoxSizer( wxHORIZONTAL );
    m_label = new wxStaticText( this, wxID_ANY, _( "&Name:" ) );
    sizer2->Add( m_label, 0, wxEXPAND, 0 );
    m_name = new wxTextCtrl( this, wxID_ANY, "" );
    m_name->Bind( wxEVT_TEXT, &LibraryPainterOptionsIncludePage::OnName, this );
    sizer2->Add( m_name, 0, wxEXPAND, 0 );
    sizer1->Add( sizer2, 0, wxEXPAND, 0 );
    sizer1->Add( 5, 5, 0, wxEXPAND, 0 );
    auto sizer3 = new wxStaticBoxSizer( new wxStaticBox( this, wxID_ANY, _( "Entry Types" ) ), wxVERTICAL );
    auto sizer4 = new wxFlexGridSizer( 11, 2, 5, 5 );
    for( auto i = 0; i < 11; ++i )
    {
        m_objects[i] = new wxCheckBox( this, wxID_ANY, labels[i] );
        sizer4->Add( m_objects[i], 0, wxEXPAND, 0 );
        m_objects[i]->Bind( wxEVT_CHECKBOX, &LibraryPainterOptionsIncludePage::OnEntryChanged, this );
    }
    sizer3->Add( sizer4, 0, wxEXPAND, 0 );
    sizer1->Add( sizer3, 0, wxEXPAND, 0 );
    sizer1->Add( 5, 5, 0, wxEXPAND, 0 );
    sizer->Add( sizer1, 0, wxEXPAND, 0 );
    sizer->Add( 5, 5, 0, wxEXPAND, 0 );
    SetSizer( sizer );
    sizer->Fit( this );
}
void LibraryPainterOptionsIncludePage::OnName(wxCommandEvent &WXUNUSED(event))
{
    PageEdited();
}

void LibraryPainterOptionsIncludePage::OnEntryChanged(wxCommandEvent &WXUNUSED(event))
{
    PageEdited();
}

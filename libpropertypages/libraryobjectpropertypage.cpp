// -*- C++ -*-
//
// generated by wxGlade 0.9.2 on Wed Jul 22 22:08:25 2020
//
// Example for compiling a single file project under Linux using g++:
//  g++ MyApp.cpp $(wx-config --libs) $(wx-config --cxxflags) -o MyApp
//
// Example for compiling a multi file project under Linux using g++:
//  g++ main.cpp $(wx-config --libs) $(wx-config --cxxflags) -o MyApp Dialog1.cpp Frame1.cpp
//
#include <wx/wx.h>
#include "propertieshandlerbase.h"
#include "painterobjects.h"
#include "propertypagebase.h"

#include "libraryobjectpropertypage.h"

LibraryObjectPropertyPage::LibraryObjectPropertyPage(wxWindow *parent, const LibraryProperty &object) : PropertyPageBase( parent )
{
    wxFlexGridSizer *mainSizer;
    auto main = new wxBoxSizer( wxHORIZONTAL );
    main->Add( 5, 5, 0, wxEXPAND, 0 );
    auto controls = new wxBoxSizer( wxVERTICAL );
    controls->Add( 5, 5, 0, wxEXPAND, 0 );
    mainSizer = new wxFlexGridSizer( 2, 2, 10, 10 );
    m_label1 = new wxStaticText( this, wxID_ANY, _( "Name" ) );
    mainSizer->Add( m_label1, 0, wxEXPAND, 0 );
    m_objectName = new wxStaticText( this, wxID_ANY, object.m_name );
    mainSizer->Add( m_objectName, 0, wxEXPAND, 0 );
    m_label2 = new wxStaticText( this, wxID_ANY, _( "Created" ) );
    mainSizer->Add( m_label2, 0, wxEXPAND, 0 );
    m_dateCreated = new wxStaticText( this, wxID_ANY, object.m_created.FormatDate() );
    mainSizer->Add( m_dateCreated, 0, wxEXPAND, 0 );
    controls->Add( mainSizer, 0, wxEXPAND, 0 );
    auto commentSizer = new wxBoxSizer( wxVERTICAL );
    m_label3 = new wxStaticText( this, wxID_ANY, _( "Comment" ) );
    commentSizer->Add( m_label3, 0, wxEXPAND, 0 );
    m_comment = new wxTextCtrl( this, wxID_ANY, object.m_comment, wxDefaultPosition, wxDefaultSize, wxTE_MULTILINE );
    commentSizer->Add( m_comment, 0, wxEXPAND, 0 );
    controls->Add( commentSizer, 0, wxEXPAND, 0 );
    controls->Add( 5, 5, 0, wxEXPAND, 0 );
    main->Add( controls, 0, wxEXPAND, 0 );
    main->Add( 5, 5, 0, wxEXPAND, 0 );
    SetSizer( main );
    main->Fit( this );
    m_comment->SetFocus();
    m_comment->Bind( wxEVT_TEXT, &LibraryObjectPropertyPage::OnCommentChange, this );
}

LibraryObjectPropertyPage::LibraryObjectPropertyPage(wxWindow *parent, LibraryObjectProperty *object) : PropertyPageBase( parent )
{
    wxFlexGridSizer *mainSizer;
    auto main = new wxBoxSizer( wxHORIZONTAL );
    main->Add( 5, 5, 0, wxEXPAND, 0 );
    auto controls = new wxBoxSizer( wxVERTICAL );
    controls->Add( 5, 5, 0, wxEXPAND, 0 );
    mainSizer = new wxFlexGridSizer( 6, 2, 10, 10 );
    m_label1 = new wxStaticText( this, wxID_ANY, _( "Object Name" ) );
    mainSizer->Add( m_label1, 0, wxEXPAND, 0 );
    m_objectName = new wxStaticText( this, wxID_ANY, object->m_name );
    mainSizer->Add( m_objectName, 0, wxEXPAND, 0 );
    m_label2 = new wxStaticText( this, wxID_ANY, _( "Lbrary" ) );
    mainSizer->Add( m_label2, 0, wxEXPAND, 0 );
    m_library = new wxStaticText( this, wxID_ANY, object->m_libName );
    mainSizer->Add( m_library, 0, wxEXPAND, 0 );
    m_label3 = new wxStaticText( this, wxID_ANY, _( "Last Modified" ) );
    mainSizer->Add( m_label3, 0, wxEXPAND, 0 );
    m_dateModified = new wxStaticText( this, wxID_ANY, object->m_modified.FormatDate() + " " + object->m_modified.FormatTime() );
    mainSizer->Add( m_dateModified, 0, wxEXPAND, 0 );
    m_label4 = new wxStaticText( this, wxID_ANY, _( "Last Compiled" ) );
    mainSizer->Add( m_label4, 0, wxEXPAND, 0 );
    m_dateCompiled = new wxStaticText( this, wxID_ANY, object->m_compiled.FormatDate() + " " + object->m_compiled.FormatTime() );
    mainSizer->Add( m_dateCompiled, 0, wxEXPAND, 0 );
    m_label5 = new wxStaticText( this, wxID_ANY, _( "Size in Bytes" ) );
    mainSizer->Add( m_label5, 0, wxEXPAND, 0 );
    m_objectSize = new wxStaticText( this, wxID_ANY, wxString::Format( "%d", object->m_size ) );
    mainSizer->Add( m_objectSize, 0, wxEXPAND, 0 );
    controls->Add( mainSizer, 0, wxEXPAND, 0 );
    auto commentSizer = new wxBoxSizer( wxVERTICAL );
    m_label3 = new wxStaticText( this, wxID_ANY, _( "Comment" ) );
    commentSizer->Add( m_label3, 0, wxEXPAND, 0 );
    m_comment = new wxTextCtrl( this, wxID_ANY, object->m_comment, wxDefaultPosition, wxDefaultSize, wxTE_MULTILINE );
    commentSizer->Add( m_comment, 0, wxEXPAND, 0 );
    controls->Add( commentSizer, 0, wxEXPAND, 0 );
    controls->Add( 5, 5, 0, wxEXPAND, 0 );
    main->Add( controls, 0, wxEXPAND, 0 );
    main->Add( 5, 5, 0, wxEXPAND, 0 );
    SetSizer( main );
    main->Fit( this );
    m_comment->SetFocus();
    m_comment->Bind( wxEVT_TEXT, &LibraryObjectPropertyPage::OnCommentChange, this );
}

void LibraryObjectPropertyPage::OnCommentChange(wxCommandEvent &event)
{
    PageEdited();
}


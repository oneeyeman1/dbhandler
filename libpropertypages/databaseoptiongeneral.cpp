// -*- C++ -*-
//
// generated by wxGlade 0.9.2 on Wed Jul 22 22:08:25 2020
//
// Example for compiling a single file project under Linux using g++:
//  g++ MyApp.cpp $(wx-config --libs) $(wx-config --cxxflags) -o MyApp
//
// Example for compiling a multi file project under Linux using g++:
//  g++ main.cpp $(wx-config --libs) $(wx-config --cxxflags) -o MyApp Dialog1.cpp Frame1.cpp
//
#include <wx/wx.h>
#include "wx/filepicker.h"
#include "wx/valnum.h"
#include "databaseoptionsgeneral.h"

DatabaseOptionGeneral::DatabaseOptionGeneral(wxWindow *parent) : wxPanel( parent, wxID_ANY )
{
    m_defaults.m_keepAlive = true;
    m_defaults.m_readOnly = false;
    m_defaults.m_sharedProfile = "";
    m_defaults.m_sqlTerminator = ';';
    m_defaults.m_tableColumns = "8";
    m_defaults.m_tableLst = true;
    m_defaults.m_tableRefresh = "1800";
    m_defaults.m_useRepo = true;
    auto sizerMain = new wxBoxSizer( wxVERTICAL );
    sizerMain->Add( 5, 5, 0, wxEXPAND, 0 );
    auto horizontalBorder = new wxBoxSizer( wxHORIZONTAL );
    horizontalBorder->Add( 5, 5, 0, wxEXPAND, 0 );
    auto first = new wxBoxSizer( wxVERTICAL );
    auto folder = new wxBoxSizer( wxHORIZONTAL );
    auto label1 = new wxStaticText( this, wxID_ANY, _( "Shared Database Folder" ) );
    folder->Add( label1, 0, wxEXPAND, 0 );
    first->Add( folder, 0, wxEXPAND, 0 );
    m_sharedFolder = new wxFilePickerCtrl( this, wxID_ANY );
    first->Add( m_sharedFolder, 0, wxEXPAND, 0 );
    horizontalBorder->Add( first, 0, wxEXPAND, 0 );
    auto grid = new wxFlexGridSizer( 4, 2, 5, 5 );
    m_displayTableList = new wxCheckBox( this, wxID_ANY, _( "&Display Table List" ) );
    grid->Add( m_displayTableList, 0, wxEXPAND, 0 );
    m_useRepository = new wxCheckBox( this, wxID_ANY, _( "&Use Repository" ) );
    grid->Add( m_useRepository, 0, wxEXPAND, 0 );
    m_readOnly = new wxCheckBox( this, wxID_ANY, _( "&Read Only" ) );
    grid->Add( m_readOnly, 0, wxEXPAND, 0 );
    m_keepAlive = new wxCheckBox( this, wxID_ANY, _( "&Keep Connection Open" ) );
    grid->Add( m_keepAlive, 0, wxEXPAND, 0 );
    auto terminatorSizer = new wxBoxSizer( wxHORIZONTAL );
    auto label2 = new wxStaticText( this, wxID_ANY, _( "SQL Terminator Character" ) );
    terminatorSizer->Add( label2, 0, wxEXPAND, 0 );
    terminatorSizer->Add( 5, 5, 0, wxEXPAND, 0 );
    m_terminator = new wxTextCtrl( this, wxID_ANY, ';' );
    m_terminator->SetMaxLength( 1 );
    terminatorSizer->Add( m_terminator, 0, wxEXPAND, 0 );
    grid->Add( terminatorSizer, 0, wxEXPAND, 0 );
    auto refresh = new wxBoxSizer( wxHORIZONTAL );
    auto label3 = new wxStaticText( this, wxID_ANY, _( "Resresh Table List" ) );
    refresh->Add( label3, 0, wxEXPAND, 0 );
    refresh->Add( 5, 5, 0, wxEXPAND, 0 );
    wxIntegerValidator<unsigned long> validator( &m_value, wxNUM_VAL_THOUSANDS_SEPARATOR );
    m_refreshTables = new wxTextCtrl( this, wxID_ANY, _( "" ), wxDefaultPosition, wxDefaultSize, 0, validator );
    refresh->Add( m_refreshTables, 0, wxEXPAND, 0 );
    refresh->Add( 5, 5, 0, wxEXPAND, 0 );
    auto label4 = new wxStaticText( this, wxID_ANY, _( "Seconds" ) );
    refresh->Add( label4, 0, wxEXPAND, 0 );
    refresh->Add( 5, 5, 0, wxEXPAND, 0  );
    m_refreshTables = new wxTextCtrl( this, wxID_ANY, _( "" ) );
    refresh->Add( m_refreshTables, 0, wxEXPAND, 0 );
    grid->Add( refresh, 0, wxEXPAND, 0 );
    auto columns = new wxBoxSizer( wxHORIZONTAL );
    auto label5 = new wxStaticText( this, wxID_ANY, _( "&Columns In Tale Display" ) );
    columns->Add( label5, 0, wxEXPAND, 0 );
    columns->Add( 5, 5, 0, wxEXPAND, 0 );
    m_colmnsInTable = new wxTextCtrl( this, wxID_ANY, _( "" ) );
    columns->Add( m_colmnsInTable, 0, wxEXPAND, 0 );
    grid->Add( columns, 0, wxEXPAND, 0 );
    grid->Add( 5, 5, 0, wxEXPAND, 0 );
    horizontalBorder->Add( grid, 0, wxEXPAND, 0 );
    horizontalBorder->Add( 5, 5, 0, wxEXPAND, 0 );
    sizerMain->Add( horizontalBorder, 0, wxEXPAND, 0 );
    sizerMain->Add( 5, 5, 0, wxEXPAND, 0 );
}

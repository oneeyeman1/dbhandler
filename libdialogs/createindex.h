// -*- C++ -*-
//
// generated by wxGlade 0.7.2 (standalone edition) on Sun Oct 30 13:18:41 2016
//
// Example for compiling a single file project under Linux using g++:
//  g++ MyApp.cpp $(wx-config --libs) $(wx-config --cxxflags) -o MyApp
//
// Example for compiling a multi file project under Linux using g++:
//  g++ main.cpp $(wx-config --libs) $(wx-config --cxxflags) -o MyApp Dialog1.cpp Frame1.cpp
//

#ifndef CREATEINDEX_H
#define CREATEINDEX_H

class CreateIndex: public wxDialog
{
public:
    // begin wxGlade: CreateIndex::ids
    // end wxGlade

    CreateIndex(wxWindow* parent, wxWindowID id, const wxString& title, DatabaseTable *table, const std::wstring &schemaName, Database *db);
    ~CreateIndex();
    std::wstring &GetCommand();
    const wxTextCtrl *GetIndexNameCtrl();

private:
    std::vector<long> m_selectedItems;
    std::vector<std::wstring> m_fields, m_tableFields;
    std::wstring m_command, m_dbType, m_dbSubType;
    DatabaseTable *m_dbTable;
    Database *m_db;
    std::wstring m_schema;
    unsigned int m_fillFactor;
    // begin wxGlade: CreateIndex::methods
    void set_properties();
    wxString m_where, m_with;
    // end wxGlade

protected:
    void OnFieldSelected(wxListEvent &event);
    void OnFileStreamSelected(wxCommandEvent &event);
    void OnFieldDeselected(wxListEvent &event);
    void OnAdvanced(wxCommandEvent &event);;
    void OnOkShowLog(wxCommandEvent &event);
    void OnColumnName(wxGridEditorCreatedEvent &event);
    bool Verify();
    void OnFillFactorUpdateUI(wxUpdateUIEvent &event);
    void OnFastUpdateUpdateUI(wxUpdateUIEvent &event);
    void OnAscending(wxCommandEvent &event);
    void OnDescending(wxCommandEvent &event);
    void OnAlgorythmLockDefault(wxCommandEvent &event);
    void OnAlgorythm(wxCommandEvent &event);
    void OnLock(wxCommandEvent &event);
    void OnPadIndex(wxCommandEvent &event);
    void OnFillFactor(wxCommandEvent &event);
    void GenerateQuery();
    void OnOKUpdateUI(wxUpdateUIEvent &event);
    void OnClusteredUnclustered(wxCommandEvent &event);
    // begin wxGlade: CreateIndex::attributes
/*    wxStaticText  *m_label1;
    wxStaticText  *m_tableName;
    wxStaticText  *m_label2;
    wxTextCtrl    *m_indexName;
    wxRadioButton *m_defaultIndex;
    wxRadioButton *m_fullText;
    wxRadioButton *m_spatial;
    wxRadioBox    *m_unique;
    wxRadioButton *m_duplicate;
    wxRadioButton *m_ascending;
    wxRadioButton *m_descending;
    wxCheckBox    *m_padIndex;
    wxStaticText  *m_label4;
    wxSpinCtrl    *m_fillfactor;
    wxCheckBox    *m_sortTempDB;
    wxCheckBox    *m_ignoreDupKeys;
    wxCheckBox    *m_statisticsNoRecompute;
    wxCheckBox    *m_statisticsIncremental;
    wxCheckBox    *m_dropExisting;
    wxCheckBox    *m_fastUpdate;
    wxCheckBox    *m_online;
    wxCheckBox    *m_resumable;
    wxCheckBox *m_optimize;
    wxCheckBox *m_allowRowLocks;
    wxCheckBox *m_allowPageLocks;
    wxStaticText *m_label5;
    wxSpinCtrl *m_maxDop;
    wxSpinCtrl *m_maxDuration;
    wxComboBox *m_dataCompression;
    wxRadioButton *m_dataCompressionNone;
    wxRadioButton *m_dataCompressionPage;
    wxRadioButton *m_indextypeDefault;
    wxRadioButton *m_indextypeBtree;
    wxRadioButton *m_indextypeHash;
    wxRadioButton *m_algorythmDefault;
    wxRadioButton *m_algorythmInPlace;
    wxRadioButton *m_algorythmCopy;
    wxRadioButton *m_lockDefault;
    wxRadioButton *m_lockNone;
    wxRadioButton *m_lockShared;
    wxRadioButton *m_lockExclusive;
    wxRadioButton *m_concurrently;
    wxCheckBox    *m_concurrency;
    wxRadioButton *m_indextypeGist;
    wxRadioButton *m_indextypeGin;
    wxRadioButton *m_nullsFirst;
    wxRadioButton *m_nullsLast;
    wxStaticText* m_label3;
    FieldWindow* m_indexColumns;
    wxStaticText *m_label6;
    wxTextCtrl *m_tablespace;
    wxListCtrl* m_table;
    wxButton* m_OK;
    wxButton* m_logOnly;
    wxButton* m_cancel;
    wxButton* m_help;
    wxPanel* panel_1;
    wxStaticText *m_label7;
    wxComboBox *m_collite = nullptr;
    wxStaticText *m_label8;
    wxGrid *m_where = nullptr;
    wxRadioBox *m_direction, *m_options;
    wxStaticText *m_label9;
    wxComboBox *m_filestream;
    wxTextCtrl *m_fsname = nullptr;
    std::vector<std::tuple<wxString, wxString, wxString, wxString> > m_whereData;
    // end wxGlade*/
    // begin wxGlade: MyDialog::attributes
    wxPanel *panel_1;
    wxStaticText *m_label1;
    wxStaticText *m_tableName;
    wxStaticText *m_label2;
    wxStaticText *m_label7;
    wxTextCtrl *m_indexName;
    wxRadioBox *m_unique;
    wxRadioBox *m_direction;
    FieldWindow *m_indexColumns;
    wxListCtrl *m_table;
    wxComboBox *m_collite;
    wxButton *m_OK;
    wxButton *m_Cancel;
    wxButton *m_logOnly;
    wxButton *m_advanced;
    wxButton *m_help;
    // end wxGlade

}; // wxGlade: end class


#endif // CREATEINDEX_H

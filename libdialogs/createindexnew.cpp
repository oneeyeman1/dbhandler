// -*- C++ -*-
//
// generated by wxGlade 1.1.0 on Tue Jan 21 22:11:11 2025
//
// Example for compiling a single file project under Linux using g++:
//  g++ MyApp.cpp $(wx-config --libs) $(wx-config --cxxflags) -o MyApp
//
// Example for compiling a multi file project under Linux using g++:
//  g++ main.cpp $(wx-config --libs) $(wx-config --cxxflags) -o MyApp Dialog1.cpp Frame1.cpp
//

#include "createindexnew.h"

// begin wxGlade: ::extracode
// end wxGlade



CreateIndex::CreateIndex(wxWindow* parent, wxWindowID id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE)
{
    // begin wxGlade: CreateIndex::CreateIndex
    SetTitle(wxT("dialog"));
    wxBoxSizer* sizer_1 = new wxBoxSizer(wxHORIZONTAL);
    panel_1 = new wxPanel(this, wxID_ANY);
    sizer_1->Add(panel_1, 1, wxEXPAND, 0);
    wxBoxSizer* sizer_2 = new wxBoxSizer(wxHORIZONTAL);
    sizer_2->Add(5, 5, 0, wxEXPAND, 0);
    wxBoxSizer* sizer_3 = new wxBoxSizer(wxVERTICAL);
    sizer_2->Add(sizer_3, 0, wxEXPAND, 0);
    sizer_3->Add(5, 5, 0, wxEXPAND, 0);
    wxBoxSizer* sizer_4 = new wxBoxSizer(wxVERTICAL);
    sizer_3->Add(sizer_4, 0, wxEXPAND, 0);
    wxBoxSizer* sizer_17 = new wxBoxSizer(wxVERTICAL);
    sizer_4->Add(sizer_17, 1, wxEXPAND, 0);
    wxBoxSizer* sizer_18 = new wxBoxSizer(wxHORIZONTAL);
    sizer_17->Add(sizer_18, 1, wxEXPAND, 0);
    wxBoxSizer* sizer_19 = new wxBoxSizer(wxVERTICAL);
    sizer_18->Add(sizer_19, 1, wxEXPAND, 0);
    wxBoxSizer* sizer_20 = new wxBoxSizer(wxHORIZONTAL);
    sizer_19->Add(sizer_20, 1, wxEXPAND, 0);
    wxStaticText* label_8 = new wxStaticText(panel_1, wxID_ANY, wxT("Table"));
    sizer_20->Add(label_8, 0, wxEXPAND, 0);
    sizer_20->Add(5, 5, 0, 0, 0);
    wxStaticText* m_name = new wxStaticText(panel_1, wxID_ANY, wxT("Table Name"));
    sizer_20->Add(m_name, 0, wxEXPAND, 0);
    sizer_19->Add(5, 5, 0, wxEXPAND, 0);
    wxBoxSizer* sizer_21 = new wxBoxSizer(wxHORIZONTAL);
    sizer_19->Add(sizer_21, 1, wxEXPAND, 0);
    wxStaticText* label_9 = new wxStaticText(panel_1, wxID_ANY, wxT("Index Name"));
    sizer_21->Add(label_9, 0, 0, 0);
    sizer_21->Add(5, 5, 0, wxEXPAND, 0);
    m_indexName = new wxTextCtrl(panel_1, wxID_ANY, wxEmptyString);
    sizer_21->Add(m_indexName, 1, 0, 0);
    const wxString radio_box_2_choices[] = {
        wxT("Unique"),
        wxT("Duplicate"),
    };
    radio_box_2 = new wxRadioBox(panel_1, wxID_ANY, wxEmptyString, wxDefaultPosition, wxDefaultSize, 2, radio_box_2_choices, 2, wxRA_SPECIFY_ROWS);
    radio_box_2->SetSelection(0);
    sizer_18->Add(radio_box_2, 0, wxALIGN_BOTTOM, 0);
    const wxString m_direction_choices[] = {
        wxT("Ascending"),
        wxT("Descending"),
    };
    m_direction = new wxRadioBox(panel_1, wxID_ANY, wxEmptyString, wxDefaultPosition, wxDefaultSize, 2, m_direction_choices, 2, wxRA_SPECIFY_ROWS);
    m_direction->SetSelection(0);
    sizer_17->Add(m_direction, 0, wxALIGN_RIGHT, 0);
    const wxString m_options_choices[] = {
        wxT("CLUSTERED"),
        wxT("UNCLUSTERED"),
    };
    m_options = new wxRadioBox(panel_1, wxID_ANY, wxEmptyString, wxDefaultPosition, wxDefaultSize, 2, m_options_choices, 2, wxRA_SPECIFY_ROWS);
    m_options->SetSelection(0);
    sizer_17->Add(m_options, 0, wxALIGN_RIGHT, 0);
    sizer_4->Add(5, 5, 0, wxEXPAND, 0);
    wxBoxSizer* sizer_8 = new wxBoxSizer(wxVERTICAL);
    sizer_4->Add(sizer_8, 0, wxEXPAND, 0);
    wxBoxSizer* sizer_9 = new wxBoxSizer(wxVERTICAL);
    sizer_8->Add(sizer_9, 0, wxEXPAND, 0);
    wxStaticText* label_3 = new wxStaticText(panel_1, wxID_ANY, wxT("WHERE"));
    sizer_9->Add(label_3, 0, wxEXPAND, 0);
    sizer_9->Add(5, 5, 0, wxEXPAND, 0);
    m_where = new wxGrid(panel_1, wxID_ANY);
    m_where->CreateGrid(4, 4);
    m_where->SetRowLabelSize(0);
    m_where->EnableDragColSize(false);
    m_where->EnableDragRowSize(false);
    m_where->SetColLabelValue(0, wxT("Name"));
    m_where->SetColLabelValue(1, wxT("Sign"));
    m_where->SetColLabelValue(2, wxT("Value"));
    m_where->SetColLabelValue(3, wxT("Cndition"));
    sizer_9->Add(m_where, 1, 0, 0);
    sizer_8->Add(5, 5, 0, wxEXPAND, 0);
    wxStaticBoxSizer* sizer_10 = new wxStaticBoxSizer(new wxStaticBox(panel_1, wxID_ANY, wxT("WTH")), wxHORIZONTAL);
    sizer_8->Add(sizer_10, 0, wxEXPAND, 0);
    wxFlexGridSizer* grid_sizer_2 = new wxFlexGridSizer(4, 4, 5, 5);
    sizer_10->Add(grid_sizer_2, 0, wxEXPAND, 0);
    m_padIndex = new wxCheckBox(sizer_10->GetStaticBox(), wxID_ANY, wxT("Pad Index"));
    grid_sizer_2->Add(m_padIndex, 0, wxALIGN_CENTER_VERTICAL, 0);
    wxBoxSizer* sizer_11 = new wxBoxSizer(wxHORIZONTAL);
    grid_sizer_2->Add(sizer_11, 0, wxEXPAND, 0);
    wxStaticText* label_4 = new wxStaticText(sizer_10->GetStaticBox(), wxID_ANY, wxT("Fill Factr"));
    sizer_11->Add(label_4, 0, wxALIGN_CENTER_VERTICAL, 0);
    sizer_11->Add(5, 5, 0, wxEXPAND, 0);
    m_fillFactr = new wxSpinCtrl(sizer_10->GetStaticBox(), wxID_ANY, wxT("0"), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    sizer_11->Add(m_fillFactr, 0, 0, 0);
    m_sortInTemp = new wxCheckBox(sizer_10->GetStaticBox(), wxID_ANY, wxT("Sort TempDB"));
    grid_sizer_2->Add(m_sortInTemp, 0, wxALIGN_CENTER_VERTICAL, 0);
    m_ignoreDupKey = new wxCheckBox(sizer_10->GetStaticBox(), wxID_ANY, wxT("Ignore Dup Key"));
    grid_sizer_2->Add(m_ignoreDupKey, 0, wxALIGN_CENTER_VERTICAL, 0);
    m_noRecompute = new wxCheckBox(sizer_10->GetStaticBox(), wxID_ANY, wxT("NoRecompute"));
    grid_sizer_2->Add(m_noRecompute, 0, 0, 0);
    m_incremental = new wxCheckBox(sizer_10->GetStaticBox(), wxID_ANY, wxT("Incremental"));
    grid_sizer_2->Add(m_incremental, 0, 0, 0);
    m_dropExisting = new wxCheckBox(sizer_10->GetStaticBox(), wxID_ANY, wxT("Drop Existing"));
    grid_sizer_2->Add(m_dropExisting, 0, 0, 0);
    m_online = new wxCheckBox(sizer_10->GetStaticBox(), wxID_ANY, wxT("Online"));
    grid_sizer_2->Add(m_online, 0, 0, 0);
    m_resumable = new wxCheckBox(sizer_10->GetStaticBox(), wxID_ANY, wxT("Resumable"));
    grid_sizer_2->Add(m_resumable, 0, wxALIGN_CENTER_VERTICAL, 0);
    wxBoxSizer* sizer_12 = new wxBoxSizer(wxHORIZONTAL);
    grid_sizer_2->Add(sizer_12, 0, wxEXPAND, 0);
    wxStaticText* label_5 = new wxStaticText(sizer_10->GetStaticBox(), wxID_ANY, wxT("Max Duration"));
    sizer_12->Add(label_5, 0, wxALIGN_CENTER_VERTICAL, 0);
    sizer_12->Add(5, 5, 0, 0, 0);
    m_maxDuration = new wxSpinCtrl(sizer_10->GetStaticBox(), wxID_ANY, wxT("0"), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 60);
    sizer_12->Add(m_maxDuration, 0, 0, 0);
    m_rowLocks = new wxCheckBox(sizer_10->GetStaticBox(), wxID_ANY, wxT("Allow Row Locks"));
    grid_sizer_2->Add(m_rowLocks, 0, wxALIGN_CENTER_VERTICAL, 0);
    m_pageLocks = new wxCheckBox(sizer_10->GetStaticBox(), wxID_ANY, wxT("Allow Page Locks"));
    grid_sizer_2->Add(m_pageLocks, 0, wxALIGN_CENTER_VERTICAL, 0);
    m_optimize = new wxCheckBox(sizer_10->GetStaticBox(), wxID_ANY, wxT("Optimize for Sequental"));
    grid_sizer_2->Add(m_optimize, 0, wxALIGN_CENTER_VERTICAL, 0);
    wxBoxSizer* sizer_13 = new wxBoxSizer(wxHORIZONTAL);
    grid_sizer_2->Add(sizer_13, 0, wxEXPAND, 0);
    wxStaticText* label_6 = new wxStaticText(sizer_10->GetStaticBox(), wxID_ANY, wxT("Max DOP"));
    sizer_13->Add(label_6, 0, wxALIGN_CENTER_VERTICAL, 0);
    sizer_13->Add(5, 5, 0, 0, 0);
    m_maxDOP = new wxSpinCtrl(sizer_10->GetStaticBox(), wxID_ANY, wxT("1"), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 1, 64);
    sizer_13->Add(m_maxDOP, 0, 0, 0);
    wxBoxSizer* sizer_14 = new wxBoxSizer(wxHORIZONTAL);
    grid_sizer_2->Add(sizer_14, 0, wxEXPAND, 0);
    wxStaticText* label_7 = new wxStaticText(sizer_10->GetStaticBox(), wxID_ANY, wxT("Data Compressiion"));
    sizer_14->Add(label_7, 0, wxALIGN_CENTER_VERTICAL, 0);
    sizer_14->Add(5, 5, 0, 0, 0);
    const wxString m_dataCompression_choices[] = {
        wxT("OFF"),
        wxT("ROW"),
        wxT("PAGE"),
    };
    m_dataCompression = new wxComboBox(sizer_10->GetStaticBox(), wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, 3, m_dataCompression_choices, wxCB_DROPDOWN);
    m_dataCompression->SetSelection(0);
    sizer_14->Add(m_dataCompression, 0, 0, 0);
    checkbox_8 = new wxCheckBox(sizer_10->GetStaticBox(), wxID_ANY, wxT("XML Compression"));
    grid_sizer_2->Add(checkbox_8, 0, wxALIGN_CENTER_VERTICAL, 0);
    sizer_8->Add(5, 5, 0, wxEXPAND, 0);
    sizer_4->Add(5, 5, 0, wxEXPAND, 0);
    wxBoxSizer* sizer_22 = new wxBoxSizer(wxHORIZONTAL);
    sizer_4->Add(sizer_22, 1, wxEXPAND, 0);
    m_table = new wxListCtrl(panel_1, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxLC_HRULES|wxLC_REPORT|wxLC_VRULES);
    m_table->AppendColumn(wxT("A"), wxLIST_FORMAT_LEFT, -1);
    sizer_22->Add(m_table, 1, wxEXPAND, 0);
    wxBoxSizer* sizer_23 = new wxBoxSizer(wxVERTICAL);
    sizer_22->Add(sizer_23, 1, wxEXPAND, 0);
    m_OK = new wxButton(panel_1, wxID_OK, wxT("OK"));
    m_OK->Enable(0);
    sizer_23->Add(m_OK, 0, wxALIGN_RIGHT, 0);
    sizer_23->Add(5, 5, 0, wxEXPAND, 0);
    m_logOnly = new wxButton(panel_1, wxID_LOGONLY, wxT("LogOnly"));
    m_logOnly->Enable(0);
    sizer_23->Add(m_logOnly, 0, wxALIGN_RIGHT, 0);
    sizer_23->Add(5, 5, 0, wxEXPAND, 0);
    m_Camcel = new wxButton(panel_1, wxID_CANCEL, wxT("Cancel"));
    sizer_23->Add(m_Camcel, 0, wxALIGN_RIGHT, 0);
    sizer_23->Add(5, 5, 0, wxEXPAND, 0);
    m_Help = new wxButton(panel_1, wxID_HELP, wxT("Help"));
    sizer_23->Add(m_Help, 0, wxALIGN_RIGHT, 0);
    sizer_3->Add(5, 5, 0, wxEXPAND, 0);
    sizer_2->Add(5, 5, 0, wxEXPAND, 0);
    
    panel_1->SetSizer(sizer_2);
    SetSizer(sizer_1);
    sizer_1->Fit(this);
    Layout();
    // end wxGlade
}


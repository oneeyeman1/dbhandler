// -*- C++ -*-
//
// generated by wxGlade 1.1.0 on Mon Dec 16 19:58:10 2024
//
// Example for compiling a single file project under Linux using g++:
//  g++ MyApp.cpp $(wx-config --libs) $(wx-config --cxxflags) -o MyApp
//
// Example for compiling a multi file project under Linux using g++:
//  g++ main.cpp $(wx-config --libs) $(wx-config --cxxflags) -o MyApp Dialog1.cpp Frame1.cpp
//

#include "neweditvaldation.h"

// begin wxGlade: ::extracode
// end wxGlade

NewEditValidator::NewEditValidator(wxWindow* parent, wxWindowID id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE)
{
    // begin wxGlade: NewEditValidator::NewEditValidator
    SetTitle( _( "Input Valdation" ) );
    auto sizer_1 = new wxBoxSizer( wxHORIZONTAL );
    m_panel = new wxPanel( this, wxID_ANY );
    sizer_1->Add( m_panel, 1, wxEXPAND, 0 );
    auto sizer_2 = new wxBoxSizer( wxHORIZONTAL );
    sizer_2->Add( 5, 5, 0, wxEXPAND, 0 );
    auto sizer_3 = new wxBoxSizer( wxVERTICAL );
    sizer_2->Add( sizer_3, 0, wxEXPAND, 0 );
    sizer_3->Add( 5, 5, 0, wxEXPAND, 0 );
    auto sizer_4 = new wxBoxSizer( wxVERTICAL );
    sizer_3->Add( sizer_4, 0, wxEXPAND, 0 );
    auto sizer_5 = new wxBoxSizer( wxHORIZONTAL );
    sizer_4->Add( sizer_5, 0, wxEXPAND, 0 );
    auto sizer_7 = new wxBoxSizer( wxVERTICAL );
    sizer_5->Add( sizer_7, 0, wxEXPAND, 0 );
    auto grid_sizer_1 = new wxFlexGridSizer( 2, 2, 5, 5 );
    sizer_7->Add( grid_sizer_1, 1, wxEXPAND, 0 );
    m_label = new wxStaticText( m_panel, wxID_ANY, _( "Name" ) );
    m_label->Enable( 0 );
    grid_sizer_1->Add( m_label, 0, wxALIGN_CENTER_VERTICAL, 0 );
    m_name = new wxTextCtrl( m_panel, wxID_ANY, wxEmptyString );
    grid_sizer_1->Add( m_name, 0, wxALIGN_CENTER_VERTICAL, 0 );
    m_label2 = new wxStaticText( m_panel, wxID_ANY, _( "Type" ) );
    grid_sizer_1->Add( m_label2, 0, wxALIGN_CENTER_VERTICAL, 0 );
    const wxString *m_type_choices = NULL;
    m_type = new wxComboBox( m_panel, wxID_ANY, "", wxDefaultPosition, wxDefaultSize, 0, nullptr, wxCB_DROPDOWN );
    m_type->Enable( 0 );
    grid_sizer_1->Add( m_type, 0, wxALIGN_CENTER_VERTICAL, 0 );
    sizer_7->Add( 5, 5, 0, wxEXPAND, 0 );
    auto sizer_8 = new wxBoxSizer( wxVERTICAL );
    sizer_7->Add( sizer_8, 1, wxEXPAND, 0 );
    m_label3 = new wxStaticText( m_panel, wxID_ANY, _( "Rule Definition" ) );
    sizer_8->Add( m_label3, 0, 0, 0 );
    sizer_8->Add( 5, 5, 0, wxEXPAND, 0 );
    m_definition = new wxTextCtrl( m_panel, wxID_ANY, wxEmptyString, wxDefaultPosition, wxDefaultSize, wxTE_MULTILINE );
    sizer_8->Add( m_definition, 0, wxEXPAND, 0 );
    sizer_5->Add( 5, 5, 0, wxEXPAND, 0 );
    wxBoxSizer* sizer_9 = new wxBoxSizer( wxVERTICAL );
    sizer_5->Add( sizer_9, 0, wxEXPAND, 0 );
    m_ok = new wxButton( m_panel, wxID_OK, _( "OK" ) );
    sizer_9->Add( m_ok, 0, 0, 0 );
    sizer_9->Add( 5, 5, 0, wxEXPAND, 0 );
    m_cancel = new wxButton( m_panel, wxID_CANCEL, _( "Cancel" ) );
    sizer_9->Add( m_cancel, 0, 0, 0 );
    sizer_9->Add( 5, 5, 0, 0, 0 );
    m_help = new wxButton( m_panel, wxID_HELP, _( "Help" ) );
    sizer_9->Add( m_help, 0, 0, 0 );
    sizer_4->Add( 5, 5, 0, wxEXPAND, 0 );
    auto sizer_10 = new wxBoxSizer( wxVERTICAL );
    sizer_4->Add( sizer_10, 0, wxEXPAND, 0 );
    m_label4 = new wxStaticText( m_panel, wxID_ANY, _( "Valdation Error Message" ) );
    sizer_10->Add( m_label4, 0, 0, 0 );
    sizer_10->Add( 5, 5, 0, wxEXPAND, 0 );
    m_errorMsg = new wxTextCtrl( m_panel, wxID_ANY, wxEmptyString );
    sizer_10->Add( m_errorMsg, 0, wxEXPAND, 0 );
    sizer_10->Add( 5, 5, 0, wxEXPAND, 0 );
    auto sizer_11 = new wxStaticBoxSizer( new wxStaticBox( m_panel, wxID_ANY, _( "Paste" ) ), wxVERTICAL );
    sizer_10->Add( sizer_11, 1, wxEXPAND, 0 );
    auto grid_sizer_2 = new wxFlexGridSizer( 2, 2, 5, 5 );
    sizer_11->Add( grid_sizer_2, 0, wxEXPAND, 0 );
    m_match = new wxButton( sizer_11->GetStaticBox(), wxID_ANY, _( "Match..." ) );
    grid_sizer_2->Add( m_match, 0, 0, 0 );
    m_label5 = new wxStaticText( sizer_11->GetStaticBox(), wxID_ANY, _( "Functons" ) );
    grid_sizer_2->Add( m_label5, 0, wxALIGN_BOTTOM, 0 );
    m_callNotes = new wxButton( sizer_11->GetStaticBox(), wxID_ANY, _( "@call_notes" ) );
    grid_sizer_2->Add( m_callNotes, 0, wxEXPAND, 0 );
    list_box_1 = new wxListBox( sizer_11->GetStaticBox(), wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, nullptr, wxLB_SINGLE );
    grid_sizer_2->Add( list_box_1, 0, 0, 0 );
    sizer_3->Add( 5, 5, 0, wxEXPAND, 0 );
    sizer_2->Add( 5, 5, 0, wxEXPAND, 0 );
    
    m_panel->SetSizer( sizer_2 );
    SetSizer( sizer_1 );
    sizer_1->Fit( this );
    Layout();
    // end wxGlade
}


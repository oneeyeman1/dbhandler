// -*- C++ -*-
//
// generated by wxGlade 1.0.4 on Wed Apr 19 20:31:32 2023
//
// Example for compiling a single file project under Linux using g++:
//  g++ MyApp.cpp $(wx-config --libs) $(wx-config --cxxflags) -o MyApp
//
// Example for compiling a multi file project under Linux using g++:
//  g++ main.cpp $(wx-config --libs) $(wx-config --cxxflags) -o MyApp Dialog1.cpp Frame1.cpp
//
#include <wx/wx.h>

#include "database.h"
#include "createviewoptions.h"

// begin wxGlade: ::extracode
// end wxGlade



CreateViewOptions::CreateViewOptions(wxWindow *parent, const Database *db) : wxDialog(parent, wxID_ANY, "")
{
    // begin wxGlade: CreateViewOptions::CreateViewOptions
    SetTitle( "CREATE VIEW options" );
    wxBoxSizer* sizer_1 = new wxBoxSizer( wxHORIZONTAL );
    m_panel = new wxPanel( this, wxID_ANY );
    sizer_1->Add( m_panel, 1, wxEXPAND, 0 );
    wxBoxSizer* sizer_2 = new wxBoxSizer( wxHORIZONTAL );
    sizer_2->Add( 5, 5, 0, wxEXPAND, 0 );
    wxBoxSizer* sizer_3 = new wxBoxSizer( wxVERTICAL );
    sizer_2->Add( sizer_3, 1, wxEXPAND, 0 );
    sizer_3->Add( 5, 5, 0, wxEXPAND, 0 );
    wxBoxSizer* sizer_4 = new wxBoxSizer( wxHORIZONTAL );
    sizer_3->Add( sizer_4, 1, wxEXPAND, 0 );
    wxBoxSizer* sizer_6 = new wxBoxSizer( wxVERTICAL );
    sizer_4->Add( sizer_6, 1, wxEXPAND, 0 );
    if( ( db->GetTableVector().m_type == L"SQLite" ) || ( ( db->GetTableVector().m_type == L"PostgreSQL ") || ( db->GetTableVector().m_type == L"ODBC" && db->GetTableVector().m_subtype == L"PostgreSQL" ) ) )
    {
        m_temp = new wxCheckBox( m_panel, wxID_ANY, "Temporary" );
        sizer_6->Add( m_temp, 0, wxEXPAND, 0 );
        sizer_6->Add(5, 5, 0, wxEXPAND, 0);
    }
    if( db->GetTableVector().m_type == L"Microsoft SQL Server" || ( db->GetTableVector().m_type == L"ODBC" && db->GetTableVector().m_subtype == L"Microsoft SQL Server" ) )
    {
        wxBoxSizer* sizer_8 = new wxBoxSizer( wxHORIZONTAL );
        sizer_6->Add( sizer_8, 0, wxEXPAND, 0 );
        wxStaticBoxSizer* sizer_9 = new wxStaticBoxSizer( new wxStaticBox( m_panel, wxID_ANY,  "View Attributes" ), wxVERTICAL );
        sizer_8->Add( sizer_9, 0, wxEXPAND, 0 );
        sizer_9->Add( 5, 5, 0, wxEXPAND, 0 );
        encryption = new wxCheckBox( m_panel, wxID_ANY, "Encryption" );
        sizer_9->Add( encryption, 0, wxEXPAND, 0 );
        sizer_9->Add( 5, 5, 0, wxEXPAND, 0 );
        schemabind = new wxCheckBox( m_panel, wxID_ANY, "Schema Binding" );
        sizer_9->Add( schemabind, 0, wxEXPAND, 0 );
        sizer_9->Add( 5, 5, 0, wxEXPAND, 0 );
        viewmetadata = new wxCheckBox( m_panel, wxID_ANY, "View Metadata" );
        sizer_9->Add( viewmetadata, 0, wxEXPAND, 0 );
        sizer_9->Add( 5, 5, 0, wxEXPAND, 0 );
        sizer_8->Add( 5, 5, 0, wxEXPAND, 0 );
        checkbox_4 = new wxCheckBox(m_panel, wxID_ANY, wxT("With Check Option"));
        sizer_8->Add(checkbox_4, 0, wxALIGN_CENTER_VERTICAL, 0);
    }
    sizer_6->Add( 5, 5, 0, wxEXPAND, 0 );
    if( db->GetTableVector().m_type == L"mySQL" || ( db->GetTableVector().m_type == L"ODBC" && db->GetTableVector().m_subtype == L"mySQL" ) )
    {
        wxStaticBoxSizer* sizer_10 = new wxStaticBoxSizer( new wxStaticBox( m_panel, wxID_ANY, "WITH" ), wxVERTICAL );
        sizer_6->Add( sizer_10, 0, wxEXPAND, 0 );
        sizer_10->Add( 5, 5, 0, wxEXPAND, 0 );
        checkbox_5 = new wxCheckBox( m_panel, wxID_ANY, "security_barrier" );
        sizer_10->Add( checkbox_5, 0, wxEXPAND, 0 );
        sizer_10->Add( 5, 5, 0, wxEXPAND, 0 );
        checkbox_6 = new wxCheckBox( m_panel, wxID_ANY, "security_invoker" );
        sizer_10->Add( checkbox_6, 0, wxEXPAND, 0 );
        sizer_10->Add( 5, 5, 0, wxEXPAND, 0 );
    }
    wxBoxSizer* sizer_7 = new wxBoxSizer( wxHORIZONTAL );
    sizer_6->Add( sizer_7, 0, wxEXPAND, 0 );
    wxStaticText* label_1 = new wxStaticText( m_panel, wxID_ANY, "In schema:" );
    sizer_7->Add( label_1, 0, wxALIGN_CENTER_VERTICAL, 0 );
    sizer_7->Add( 5, 5, 0, wxEXPAND, 0 );
    const wxString m_schemas_choices[] = {};
    m_schemas = new wxComboBox( m_panel, wxID_ANY, "", wxDefaultPosition, wxDefaultSize, 0, m_schemas_choices, wxCB_DROPDOWN );
    for( auto it = db->GetTableVector().m_tables.begin(); it != db->GetTableVector().m_tables.end(); ++it )
    {
        for( auto it1 = (*it).second.begin(); it1 < (*it).second.end(); ++it1 )
            m_schemas->Append( (*it1)->GetSchemaName() );
    }
    m_schemas->SetSelection( 0 );
    sizer_7->Add( m_schemas, 0, wxALIGN_CENTER_VERTICAL, 0 );
    if( db->GetTableVector().m_type == L"mySQL" || ( db->GetTableVector().m_type == L"ODBC" && db->GetTableVector().m_subtype == L"mySQL" ) )
    {
        const wxString radio_box_1_choices[] =
        {
            "UNDEFINED",
            "MERGE",
        };
        radio_box_1 = new wxRadioBox( m_panel, wxID_ANY, "Algorithm", wxDefaultPosition, wxDefaultSize, 2, radio_box_1_choices, 3, wxRA_SPECIFY_COLS );
        radio_box_1->SetSelection( 0 );
        sizer_6->Add( radio_box_1, 0, wxEXPAND, 0 );
        const wxString radio_box_2_choices[] =
        {
            "CASCADED",
            "LOCAL",
        };
        radio_box_2 = new wxRadioBox( m_panel, wxID_ANY, "WITH CHECK OPTION", wxDefaultPosition, wxDefaultSize, 2, radio_box_2_choices, 2, wxRA_SPECIFY_COLS );
        radio_box_2->SetSelection( 0 );
        sizer_6->Add( radio_box_2, 0, wxEXPAND, 0 );
    }
    sizer_4->Add( 5, 5, 0, wxEXPAND, 0 );
    wxBoxSizer* sizer_5 = new wxBoxSizer( wxVERTICAL );
    sizer_4->Add( sizer_5, 1, wxEXPAND, 0 );
    m_ok = new wxButton( m_panel, wxID_OK, "OK" );
    m_ok->SetDefault();
    sizer_5->Add( m_ok, 0, wxALIGN_CENTER_HORIZONTAL, 0 );
    sizer_5->Add( 5, 5, 0, wxEXPAND, 0 );
    m_cancel = new wxButton( m_panel, wxID_CANCEL, "Cancel" );
    sizer_5->Add( m_cancel, 0, wxALIGN_CENTER_HORIZONTAL, 0 );
    sizer_5->Add( 5, 5, 0, wxEXPAND, 0 );
    m_help = new wxButton( m_panel, wxID_HELP, "Help" );
    sizer_5->Add( m_help, 0, wxALIGN_CENTER_HORIZONTAL, 0 );
    sizer_3->Add( 5, 5, 0, wxEXPAND, 0 );
    sizer_2->Add( 5, 5, 0, wxEXPAND, 0 );
    
    m_panel->SetSizer( sizer_2 );
    SetSizer( sizer_1 );
    sizer_1->Fit( this );
    Layout();
    Centre();
    // end wxGlade
}

